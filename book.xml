<?xml version="1.0"?>
<book xmlns:xi="http://www.w3.org/2001/XInclude" xmlns="http://docbook.org/ns/docbook" xmlns:xl="http://www.w3.org/1999/xlink" version="5.0">
    <bookinfo>
        <title>Practical Guide To SubGit</title>
        <subtitle>Safe Svn to Git Migration</subtitle>
        <releaseinfo/>
        <copyright>
            <year>2012</year>
            <holder>TMate Software</holder>
        </copyright>
        <legalnotice>
            <para>This work is licensed under a <link xl:href="http://creativecommons.org/licenses/by-nc-sa/3.0/">Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License</link>.
            </para>
        </legalnotice>
        <author>
            <firstname>Alexander</firstname>
            <surname>Kitaev</surname>
        </author>
    </bookinfo>   

    
    <chapter id="introduction">
        <title>Overview</title>
        <para>SubGit is a tool for bidirectional Subversion and Git repositories synchronization. 
              SubGit is written in Java and works on the server side, i.e. requires direct access to both Subversion and Git repositories over local file system.
        </para>
        <para>Most commonly, SubGit user starts with Subversion repository being configured on the server. 
              Access to Subversion repository is availaibe over network (with HTTP(s), plain svn or svn over SSH protocols) and over the local file system. 
              Correspondingly, users requests are handled by Apache Web Server, svnserve daemon or sshd daemon which invokes svnserve process. 
              <xref xrefstyle="select: label" linkend="start"/> shows a generic outline of the described configuration.
       </para>               
       <para>           
           <figure id="start"><title>Common Subversion Setup</title>
           <mediaobject><imageobject><imagedata scale="105" fileref="images/start.png"/></imageobject></mediaobject>
           </figure>
        </para>
        <para>SubGit creates one or more Git repositories alongside with the existing Subversion repository and translates existing Subversion revisions into Git 
              commits. After that, SubGit configures Subversion and Git hook scripts so, that changes made in the Subversion repository are instantly translated 
              into Git repository and vice versa. <xref xrefstyle="select: label" linkend="subgit"/> shows the server with SubGit being installed. 
              SubGit grants users with a choice of using either Git or Subversion.
        </para> 
        <para>
           <figure id="subgit"><title>Server with SubGit installed</title>
           <mediaobject><imageobject><imagedata scale="115" fileref="images/subgit.png"/></imageobject></mediaobject>
           </figure>
        </para>
        <formalpara><title>Chapter summary:</title>
        <para>
        <itemizedlist>
        <listitem>SubGit needs direct access to Subversion repository over filesystem</listitem>
        <listitem>SubGit creates Git repositories and translates existing Subversion revisions into Git commits</listitem>
        <listitem>SubGit uses standard hooks mechanism to keep Subversion and Git repositories synchronized</listitem>
        <listitem>SubGit grants users with a choice of whether to use Git or Subversion</listitem>
        </itemizedlist>
        </para>
        </formalpara>
    </chapter>

    <chapter id="translation">
        <title>Translation</title>
        <para>Subversion repository may contain one or more projects. During installation SubGit detects those projects or
              locations and creates Git repository for each of the detected location.  
        </para>
    </chapter>

    <chapter id="configuration">
        <title>SubGit Configuration</title>
    </chapter>
    <chapter id="installation">
        <title>SubGit Installation</title>
    </chapter>

    <chapter id="linux-apache">
        <title>Subversion and Git over HTTP with Apache Web Server</title>
    </chapter>
    <chapter id="linux-ssh">
        <title>Subversion and Git over SSH protocol</title>
    </chapter>
    <chapter id="linux-shared">
        <title>Subversion over SSH and Git over HTTP protocol</title>
    </chapter>
    <chapter id="linux-gitolite">
        <title>Using SubGit with Gitolite system</title>
    </chapter>
    <chapter id="linux-issues">
        <title>Troubleshooting SubGit on Linux / OS X</title>
    </chapter>
    
    <chapter id="windows">
        <title>Installing SubGit on Windows</title>
    </chapter>
    <chapter id="windows-visualsvn">
        <title>SubGit with VisualSVN</title>
    </chapter>
    <chapter id="windows-ubersvn">
        <title>SubGit with WANDisco uberSVN on Windows</title>
    </chapter>
    <chapter id="windows-issues">
        <title>Troubleshooting SubGit on Windows</title>
    </chapter>
    
    <chapter id="registration">
        <title>SubGit Registration</title>
    </chapter>

</book>
